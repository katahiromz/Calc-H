(Japanese, Shift_JIS)

            +--------------------------------+
            |ひらがな電卓 Calc-H のビルド方法|
            +--------------------------------+

対応環境
--------

次の環境に対応しています。

    * Windows + Visual C++ 2013
    * Windows + MinGW + MSYS + g++
    * Linux + clang++ (ソースのUTF-8への変換が必要)
    * Linux + g++ (ソースのUTF-8への変換が必要)

Boostのインストールが別途必要です。また、
jonigata氏のパーサジェネレータのCaperが必要です。


Windows + Visual C++ 2013の場合
---------------------------------------

最初にcaper.exeをこのフォルダにおいてください。それから、
ファイル「Calc-H.sln」を開いて、プロジェクトの設定で、
Boostへのインクルードパスを設定すれば、普通にビルドできます。


Windows + MinGW + MSYS + g++の場合
----------------------------------

最初にcaper.exeをこのフォルダにおいてください。それから、
ファイル「Makefile.g++」をテキストエディタで開いて
「Makefile.g++」のBOOST_DIRにBoostへのインクルードパスを設定して下さい。
その後、このフォルダでコマンドライン「make -f Makefile.g++」
を実行すれば、自動的にビルドできます。


Linux + clang++の場合
---------------------

まず、Calc-HのソースコードをUTF-8に変換して下さい。また、
Caperのソースコードを入手し、Linuxでビルドして下さい。
できたcaperをこのフォルダにおいてください。それから、
ファイル「Makefile.clang++」をテキストエディタで開いて内容を
確認し、問題があれば、編集して下さい。
その後、このフォルダでコマンドライン「make -f Makefile.clang++」
を実行すれば、自動的にビルドできます。


Linux + g++の場合
-----------------

まず、Calc-HのソースコードをUTF-8に変換して下さい。また、
Caperのソースコードを入手し、Linuxでビルドして下さい。
できたcaperをこのフォルダにおいてください。それから、
ファイル「Makefile.g++」をテキストエディタで開き、
    #BOOST_DIR = .
    BOOST_DIR = /c/local/boost_1_55_0
を
    BOOST_DIR = .
    #BOOST_DIR = /c/local/boost_1_55_0
にして下さい。また、
    DOTEXE = .exe
を
    DOTEXE = 
にする必要があります。さらに
    DEFS = -std=c++0x -static -Wall -pedantic -D_SJIS -finput-charset=CP932 -fexec-charset=CP932
    #DEFS = -std=c++0x -static -Wall -pedantic -D_UTF8
の部分を
    #DEFS = -std=c++0x -static -Wall -pedantic -D_SJIS -finput-charset=CP932 -fexec-charset=CP932
    DEFS = -std=c++0x -static -Wall -pedantic -D_UTF8
にする必要があります。その後、このフォルダでコマンドライン
「make -f Makefile.g++」を実行すれば、自動的にビルドできます。
